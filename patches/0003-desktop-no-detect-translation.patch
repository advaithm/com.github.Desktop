diff --git a/app/package.json b/app/package.json
index cf35d2a31..b4fe9e329 100644
--- a/app/package.json
+++ b/app/package.json
@@ -26,7 +26,6 @@
     "compare-versions": "^3.6.0",
     "deep-equal": "^1.0.1",
     "desktop-trampoline": "desktop/desktop-trampoline#v0.9.7",
-    "detect-arm64-translation": "https://github.com/desktop/node-detect-arm64-translation#v1.0.4",
     "dexie": "^2.0.0",
     "double-ended-queue": "^2.1.0-0",
     "@shiftkey/dugite": "^1.103.99",
diff --git a/app/src/lib/get-architecture.ts b/app/src/lib/get-architecture.ts
index 6a8b4f319..a34952369 100644
--- a/app/src/lib/get-architecture.ts
+++ b/app/src/lib/get-architecture.ts
@@ -1,5 +1,4 @@
 import { App } from 'electron'
-import { isRunningUnderARM64Translation } from 'detect-arm64-translation'
 
 export type Architecture = 'x64' | 'arm64' | 'x64-emulated'
 
@@ -10,12 +9,6 @@ export type Architecture = 'x64' | 'arm64' | 'x64-emulated'
  * Rosetta).
  */
 export function getArchitecture(app: App): Architecture {
-  if (
-    app.runningUnderRosettaTranslation === true ||
-    isRunningUnderARM64Translation() === true
-  ) {
-    return 'x64-emulated'
-  }
 
   return process.arch === 'arm64' ? 'arm64' : 'x64'
 }
diff --git a/app/src/ui/lib/update-store.ts b/app/src/ui/lib/update-store.ts
index 050f6f15c..2f70f3dfd 100644
--- a/app/src/ui/lib/update-store.ts
+++ b/app/src/ui/lib/update-store.ts
@@ -14,8 +14,6 @@ import { parseError } from '../../lib/squirrel-error-parser'
 import { ReleaseSummary } from '../../models/release-notes'
 import { generateReleaseSummary } from '../../lib/release-notes'
 import { setNumber, getNumber } from '../../lib/local-storage'
-import { enableUpdateFromEmulatedX64ToARM64 } from '../../lib/feature-flag'
-import { isRunningUnderARM64Translation } from 'detect-arm64-translation'
 
 /** The states the auto updater can be in. */
 export enum UpdateStatus {
@@ -167,19 +165,6 @@ class UpdateStore {
     // If the app is running under Rosetta (i.e. it's a macOS x64 binary running
     // on an arm64 machine), we need to tweak the update URL here to point at
     // the arm64 binary.
-    if (
-      enableUpdateFromEmulatedX64ToARM64() &&
-      (remote.app.runningUnderRosettaTranslation === true ||
-        isRunningUnderARM64Translation() === true)
-    ) {
-      const url = new URL(updatesURL)
-      url.pathname = url.pathname.replace(
-        /\/desktop\/desktop\/(x64\/)?latest/,
-        '/desktop/desktop/arm64/latest'
-      )
-      updatesURL = url.toString()
-    }
-
     this.userInitiatedUpdate = !inBackground
 
     try {
